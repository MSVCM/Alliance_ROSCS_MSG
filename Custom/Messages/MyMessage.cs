//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by ros2cs.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;

#nullable enable

namespace Rosidl.Messages.Custom
{
    /// <summary>
    /// Message interface definition for <c>custom_msgs/msg/MyMessage</c>.
    /// </summary>
    [global::Rosidl.Runtime.TypeSupportAttribute("custom_msgs/msg/MyMessage")]
    public unsafe partial class MyMessage : global::Rosidl.Runtime.IMessage
    {
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Rosidl.Runtime.Generator.CSharp", "1.0.0")]
        public static string TypeSupportName => "custom_msgs/msg/MyMessage";
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Rosidl.Runtime.Generator.CSharp", "1.0.0")]
        public static global::Rosidl.Runtime.TypeSupportHandle GetTypeSupportHandle()
        {
            return new global::Rosidl.Runtime.TypeSupportHandle(_PInvoke(), global::Rosidl.Runtime.HandleType.Message);
            
            [global::System.Runtime.InteropServices.SuppressGCTransitionAttribute]
            [global::System.Runtime.InteropServices.DllImportAttribute("custom_msgs__rosidl_typesupport_c", EntryPoint = "rosidl_typesupport_c__get_message_type_support_handle__custom_msgs__msg__MyMessage")]
            static extern nint _PInvoke();
        }
        
        /// <summary>
        /// Create a new instance of <see cref="MyMessage"/> with fields initialized to specified values.
        /// </summary>
        /// <param name='number'>
        /// Originally defined as: <c><![CDATA[int64 number]]></c>
        /// </param>
        /// <param name='numbers'>
        /// Originally defined as: <c><![CDATA[int64[] numbers]]></c>
        /// </param>
        /// <param name='numbersFixed'>
        /// Originally defined as: <c><![CDATA[int64[3] numbers_fixed]]></c>
        /// </param>
        /// <param name='numbersBounded'>
        /// Originally defined as: <c><![CDATA[int64[<=3] numbers_bounded]]></c>
        /// </param>
        /// <param name='vector'>
        /// Originally defined as: <c><![CDATA[geometry_msgs/Vector3 vector]]></c>
        /// </param>
        /// <param name='vectors'>
        /// Originally defined as: <c><![CDATA[geometry_msgs/Vector3[] vectors]]></c>
        /// </param>
        /// <param name='vectorsFixed'>
        /// Originally defined as: <c><![CDATA[geometry_msgs/Vector3[3] vectors_fixed]]></c>
        /// </param>
        /// <param name='vectorsBounded'>
        /// Originally defined as: <c><![CDATA[geometry_msgs/Vector3[<=3] vectors_bounded]]></c>
        /// </param>
        /// <param name='str'>
        /// Originally defined as: <c><![CDATA[string str]]></c>
        /// </param>
        /// <param name='strBounded'>
        /// Originally defined as: <c><![CDATA[string<=3 str_bounded]]></c>
        /// </param>
        /// <param name='strings'>
        /// Originally defined as: <c><![CDATA[string[] strings]]></c>
        /// </param>
        /// <param name='stringsFixed'>
        /// Originally defined as: <c><![CDATA[string[3] strings_fixed]]></c>
        /// </param>
        /// <param name='stringsBounded'>
        /// Originally defined as: <c><![CDATA[string[<=3] strings_bounded]]></c>
        /// </param>
        /// <param name='wstring'>
        /// Originally defined as: <c><![CDATA[wstring wstring]]></c>
        /// </param>
        /// <param name='wstringBounded'>
        /// Originally defined as: <c><![CDATA[wstring<=3 wstring_bounded]]></c>
        /// </param>
        /// <param name='wstrings'>
        /// Originally defined as: <c><![CDATA[wstring[] wstrings]]></c>
        /// </param>
        /// <param name='wstringsFixed'>
        /// Originally defined as: <c><![CDATA[wstring[3] wstrings_fixed]]></c>
        /// </param>
        /// <param name='wstringsBounded'>
        /// Originally defined as: <c><![CDATA[wstring[<=3] wstrings_bounded]]></c>
        /// </param>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Rosidl.Runtime.Generator.CSharp", "1.0.0")]
        public MyMessage(
            long @number = 0,
            long[]? @numbers = null,
            long[]? @numbersFixed = null,
            long[]? @numbersBounded = null,
            global::Rosidl.Messages.Geometry.Vector3? @vector = null,
            global::Rosidl.Messages.Geometry.Vector3[]? @vectors = null,
            global::Rosidl.Messages.Geometry.Vector3[]? @vectorsFixed = null,
            global::Rosidl.Messages.Geometry.Vector3[]? @vectorsBounded = null,
            string @str = "",
            string @strBounded = "",
            string[]? @strings = null,
            string[]? @stringsFixed = null,
            string[]? @stringsBounded = null,
            string @wstring = "",
            string @wstringBounded = "",
            string[]? @wstrings = null,
            string[]? @wstringsFixed = null,
            string[]? @wstringsBounded = null
        )
        {
            Number = @number;
            Numbers = @numbers ?? global::System.Array.Empty<long>();
        
            if (@numbersFixed != null)
            {
                NumbersFixed = @numbersFixed;
            }
            else
            {
                NumbersFixed = new long[3];
            }
        
            NumbersBounded = @numbersBounded ?? global::System.Array.Empty<long>();
            Vector = @vector ?? new global::Rosidl.Messages.Geometry.Vector3();
            Vectors = @vectors ?? global::System.Array.Empty<global::Rosidl.Messages.Geometry.Vector3>();
        
            if (@vectorsFixed != null)
            {
                VectorsFixed = @vectorsFixed;
            }
            else
            {
                VectorsFixed = new global::Rosidl.Messages.Geometry.Vector3[3];
                for (int __i = 0; __i < 3; __i++)
                {
                   VectorsFixed[__i] = new global::Rosidl.Messages.Geometry.Vector3();
                }
            }
        
            VectorsBounded = @vectorsBounded ?? global::System.Array.Empty<global::Rosidl.Messages.Geometry.Vector3>();
            Str = @str;
            StrBounded = @strBounded;
            Strings = @strings ?? global::System.Array.Empty<string>();
        
            if (@stringsFixed != null)
            {
                StringsFixed = @stringsFixed;
            }
            else
            {
                StringsFixed = new string[3];
                for (int __i = 0; __i < 3; __i++)
                {
                    StringsFixed[__i] = "";
                }
            }
        
            StringsBounded = @stringsBounded ?? global::System.Array.Empty<string>();
            Wstring = @wstring;
            WstringBounded = @wstringBounded;
            Wstrings = @wstrings ?? global::System.Array.Empty<string>();
        
            if (@wstringsFixed != null)
            {
                WstringsFixed = @wstringsFixed;
            }
            else
            {
                WstringsFixed = new string[3];
                for (int __i = 0; __i < 3; __i++)
                {
                    WstringsFixed[__i] = "";
                }
            }
        
            WstringsBounded = @wstringsBounded ?? global::System.Array.Empty<string>();
        }
        
        
        /// <summary>
        /// Create a new instance of <see cref="MyMessage"/>, and copy its data from the specified <see cref="Priv"/> structure.
        /// </summary>
        /// <param name="priv">The <see cref="Priv"/> structure to be copied from.</param>
        /// <param name="textEncoding">Text encoding of the strings in the <see cref="Priv"/> structure and its containing structures, if any.</param>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Rosidl.Runtime.Generator.CSharp", "1.0.0")]
        public MyMessage(in Priv priv, global::System.Text.Encoding textEncoding)
        {
            this.Number = priv.Number;
            this.Numbers = priv.Numbers.AsSpan().ToArray();
            this.NumbersFixed = priv.NumbersFixed.ToArray();
            this.NumbersBounded = priv.NumbersBounded.AsSpan().ToArray();
            this.Vector = new global::Rosidl.Messages.Geometry.Vector3(in priv.Vector, textEncoding);
        
            this.Vectors = new global::Rosidl.Messages.Geometry.Vector3[priv.Vectors.Size];
            var Vectors_span = priv.Vectors.AsSpan();
            for (int __i = 0; __i < this.Vectors.Length; __i++)
            {
                this.Vectors[__i] = new global::Rosidl.Messages.Geometry.Vector3(in Vectors_span[__i], textEncoding);
            }
        
            this.VectorsFixed = new global::Rosidl.Messages.Geometry.Vector3[3];
            for (int __i = 0; __i < this.VectorsFixed.Length; __i++)
            {
                this.VectorsFixed[__i] = new global::Rosidl.Messages.Geometry.Vector3(in priv.VectorsFixed[__i], textEncoding);
            }
        
            this.VectorsBounded = new global::Rosidl.Messages.Geometry.Vector3[priv.VectorsBounded.Size];
            var VectorsBounded_span = priv.VectorsBounded.AsSpan();
            for (int __i = 0; __i < this.VectorsBounded.Length; __i++)
            {
                this.VectorsBounded[__i] = new global::Rosidl.Messages.Geometry.Vector3(in VectorsBounded_span[__i], textEncoding);
            }
        
            this.Str = global::Rosidl.Runtime.Interop.StringMarshal.CreatePooledString(priv.Str.AsSpan(), textEncoding);
            this.StrBounded = global::Rosidl.Runtime.Interop.StringMarshal.CreatePooledString(priv.StrBounded.AsSpan(), textEncoding);
        
            this.Strings = new string[priv.Strings.Size];
            var Strings_span = priv.Strings.AsSpan();
            for (int __i = 0; __i < this.Strings.Length; __i++)
            {
                this.Strings[__i] = global::Rosidl.Runtime.Interop.StringMarshal.CreatePooledString(Strings_span[__i].AsSpan(), textEncoding);
            }
        
            this.StringsFixed = new string[3];
            for (int __i = 0; __i < this.StringsFixed.Length; __i++)
            {
                this.StringsFixed[__i] = global::Rosidl.Runtime.Interop.StringMarshal.CreatePooledString(priv.StringsFixed[__i].AsSpan(), textEncoding);
            }
        
            this.StringsBounded = new string[priv.StringsBounded.Size];
            var StringsBounded_span = priv.StringsBounded.AsSpan();
            for (int __i = 0; __i < this.StringsBounded.Length; __i++)
            {
                this.StringsBounded[__i] = global::Rosidl.Runtime.Interop.StringMarshal.CreatePooledString(StringsBounded_span[__i].AsSpan(), textEncoding);
            }
        
            this.Wstring = global::Rosidl.Runtime.Interop.StringMarshal.CreatePooledString(priv.Wstring.AsSpan());
            this.WstringBounded = global::Rosidl.Runtime.Interop.StringMarshal.CreatePooledString(priv.WstringBounded.AsSpan());
        
            this.Wstrings = new string[priv.Wstrings.Size];
            var Wstrings_span = priv.Wstrings.AsSpan();
            for (int __i = 0; __i < this.Wstrings.Length; __i++)
            {
                this.Wstrings[__i] = global::Rosidl.Runtime.Interop.StringMarshal.CreatePooledString(Wstrings_span[__i].AsSpan());
            }
        
            this.WstringsFixed = new string[3];
            for (int __i = 0; __i < this.WstringsFixed.Length; __i++)
            {
                this.WstringsFixed[__i] = global::Rosidl.Runtime.Interop.StringMarshal.CreatePooledString(priv.WstringsFixed[__i].AsSpan());
            }
        
            this.WstringsBounded = new string[priv.WstringsBounded.Size];
            var WstringsBounded_span = priv.WstringsBounded.AsSpan();
            for (int __i = 0; __i < this.WstringsBounded.Length; __i++)
            {
                this.WstringsBounded[__i] = global::Rosidl.Runtime.Interop.StringMarshal.CreatePooledString(WstringsBounded_span[__i].AsSpan());
            }
        }
        
        
        /// <summary>
        /// Originally defined as: <c><![CDATA[int64 number]]></c>
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Rosidl.Runtime.Generator.CSharp", "1.0.0")]
        public long Number { get; set; }
        
        /// <summary>
        /// Originally defined as: <c><![CDATA[int64[] numbers]]></c>
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Rosidl.Runtime.Generator.CSharp", "1.0.0")]
        public long[] Numbers { get; set; }
        
        private long[] __backingField__NumbersFixed;
        
        /// <summary>
        /// Originally defined as: <c><![CDATA[int64[3] numbers_fixed]]></c>
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Rosidl.Runtime.Generator.CSharp", "1.0.0")]
        public long[] NumbersFixed
        {
            get
            {
                return __backingField__NumbersFixed;
            }
            [global::System.Diagnostics.CodeAnalysis.MemberNotNullAttribute(nameof(__backingField__NumbersFixed))]
            set
            {
                __backingField__NumbersFixed = value.Length == 3 ? value : throw new global::System.ArgumentException("Size of the array 'NumbersFixed' must be 3.");
            }
        }
        
        private long[] __backingField__NumbersBounded;
        
        /// <summary>
        /// Originally defined as: <c><![CDATA[int64[<=3] numbers_bounded]]></c>
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Rosidl.Runtime.Generator.CSharp", "1.0.0")]
        public long[] NumbersBounded
        {
            get
            {
                return __backingField__NumbersBounded;
            }
            [global::System.Diagnostics.CodeAnalysis.MemberNotNullAttribute(nameof(__backingField__NumbersBounded))]
            set
            {
                __backingField__NumbersBounded = value.Length <= 3 ? value : throw new global::System.ArgumentException("Size of the array or string 'NumbersBounded' must be less or equal than 3.");
            }
        }
        
        /// <summary>
        /// Originally defined as: <c><![CDATA[geometry_msgs/Vector3 vector]]></c>
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Rosidl.Runtime.Generator.CSharp", "1.0.0")]
        public global::Rosidl.Messages.Geometry.Vector3 Vector { get; set; }
        
        /// <summary>
        /// Originally defined as: <c><![CDATA[geometry_msgs/Vector3[] vectors]]></c>
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Rosidl.Runtime.Generator.CSharp", "1.0.0")]
        public global::Rosidl.Messages.Geometry.Vector3[] Vectors { get; set; }
        
        private global::Rosidl.Messages.Geometry.Vector3[] __backingField__VectorsFixed;
        
        /// <summary>
        /// Originally defined as: <c><![CDATA[geometry_msgs/Vector3[3] vectors_fixed]]></c>
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Rosidl.Runtime.Generator.CSharp", "1.0.0")]
        public global::Rosidl.Messages.Geometry.Vector3[] VectorsFixed
        {
            get
            {
                return __backingField__VectorsFixed;
            }
            [global::System.Diagnostics.CodeAnalysis.MemberNotNullAttribute(nameof(__backingField__VectorsFixed))]
            set
            {
                __backingField__VectorsFixed = value.Length == 3 ? value : throw new global::System.ArgumentException("Size of the array 'VectorsFixed' must be 3.");
            }
        }
        
        private global::Rosidl.Messages.Geometry.Vector3[] __backingField__VectorsBounded;
        
        /// <summary>
        /// Originally defined as: <c><![CDATA[geometry_msgs/Vector3[<=3] vectors_bounded]]></c>
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Rosidl.Runtime.Generator.CSharp", "1.0.0")]
        public global::Rosidl.Messages.Geometry.Vector3[] VectorsBounded
        {
            get
            {
                return __backingField__VectorsBounded;
            }
            [global::System.Diagnostics.CodeAnalysis.MemberNotNullAttribute(nameof(__backingField__VectorsBounded))]
            set
            {
                __backingField__VectorsBounded = value.Length <= 3 ? value : throw new global::System.ArgumentException("Size of the array or string 'VectorsBounded' must be less or equal than 3.");
            }
        }
        
        /// <summary>
        /// Originally defined as: <c><![CDATA[string str]]></c>
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Rosidl.Runtime.Generator.CSharp", "1.0.0")]
        public string Str { get; set; }
        
        private string __backingField__StrBounded;
        
        /// <summary>
        /// Originally defined as: <c><![CDATA[string<=3 str_bounded]]></c>
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Rosidl.Runtime.Generator.CSharp", "1.0.0")]
        public string StrBounded
        {
            get
            {
                return __backingField__StrBounded;
            }
            [global::System.Diagnostics.CodeAnalysis.MemberNotNullAttribute(nameof(__backingField__StrBounded))]
            set
            {
                __backingField__StrBounded = value.Length <= 3 ? value : throw new global::System.ArgumentException("Size of the array or string 'StrBounded' must be less or equal than 3.");
            }
        }
        
        /// <summary>
        /// Originally defined as: <c><![CDATA[string[] strings]]></c>
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Rosidl.Runtime.Generator.CSharp", "1.0.0")]
        public string[] Strings { get; set; }
        
        private string[] __backingField__StringsFixed;
        
        /// <summary>
        /// Originally defined as: <c><![CDATA[string[3] strings_fixed]]></c>
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Rosidl.Runtime.Generator.CSharp", "1.0.0")]
        public string[] StringsFixed
        {
            get
            {
                return __backingField__StringsFixed;
            }
            [global::System.Diagnostics.CodeAnalysis.MemberNotNullAttribute(nameof(__backingField__StringsFixed))]
            set
            {
                __backingField__StringsFixed = value.Length == 3 ? value : throw new global::System.ArgumentException("Size of the array 'StringsFixed' must be 3.");
            }
        }
        
        private string[] __backingField__StringsBounded;
        
        /// <summary>
        /// Originally defined as: <c><![CDATA[string[<=3] strings_bounded]]></c>
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Rosidl.Runtime.Generator.CSharp", "1.0.0")]
        public string[] StringsBounded
        {
            get
            {
                return __backingField__StringsBounded;
            }
            [global::System.Diagnostics.CodeAnalysis.MemberNotNullAttribute(nameof(__backingField__StringsBounded))]
            set
            {
                __backingField__StringsBounded = value.Length <= 3 ? value : throw new global::System.ArgumentException("Size of the array or string 'StringsBounded' must be less or equal than 3.");
            }
        }
        
        /// <summary>
        /// Originally defined as: <c><![CDATA[wstring wstring]]></c>
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Rosidl.Runtime.Generator.CSharp", "1.0.0")]
        public string Wstring { get; set; }
        
        private string __backingField__WstringBounded;
        
        /// <summary>
        /// Originally defined as: <c><![CDATA[wstring<=3 wstring_bounded]]></c>
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Rosidl.Runtime.Generator.CSharp", "1.0.0")]
        public string WstringBounded
        {
            get
            {
                return __backingField__WstringBounded;
            }
            [global::System.Diagnostics.CodeAnalysis.MemberNotNullAttribute(nameof(__backingField__WstringBounded))]
            set
            {
                __backingField__WstringBounded = value.Length <= 3 ? value : throw new global::System.ArgumentException("Size of the array or string 'WstringBounded' must be less or equal than 3.");
            }
        }
        
        /// <summary>
        /// Originally defined as: <c><![CDATA[wstring[] wstrings]]></c>
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Rosidl.Runtime.Generator.CSharp", "1.0.0")]
        public string[] Wstrings { get; set; }
        
        private string[] __backingField__WstringsFixed;
        
        /// <summary>
        /// Originally defined as: <c><![CDATA[wstring[3] wstrings_fixed]]></c>
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Rosidl.Runtime.Generator.CSharp", "1.0.0")]
        public string[] WstringsFixed
        {
            get
            {
                return __backingField__WstringsFixed;
            }
            [global::System.Diagnostics.CodeAnalysis.MemberNotNullAttribute(nameof(__backingField__WstringsFixed))]
            set
            {
                __backingField__WstringsFixed = value.Length == 3 ? value : throw new global::System.ArgumentException("Size of the array 'WstringsFixed' must be 3.");
            }
        }
        
        private string[] __backingField__WstringsBounded;
        
        /// <summary>
        /// Originally defined as: <c><![CDATA[wstring[<=3] wstrings_bounded]]></c>
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Rosidl.Runtime.Generator.CSharp", "1.0.0")]
        public string[] WstringsBounded
        {
            get
            {
                return __backingField__WstringsBounded;
            }
            [global::System.Diagnostics.CodeAnalysis.MemberNotNullAttribute(nameof(__backingField__WstringsBounded))]
            set
            {
                __backingField__WstringsBounded = value.Length <= 3 ? value : throw new global::System.ArgumentException("Size of the array or string 'WstringsBounded' must be less or equal than 3.");
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Rosidl.Runtime.Generator.CSharp", "1.0.0")]
        public void WriteTo(nint data, global::System.Text.Encoding textEncoding)
        {
            WriteTo(ref global::System.Runtime.CompilerServices.Unsafe.AsRef<Priv>(data.ToPointer()), textEncoding);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Rosidl.Runtime.Generator.CSharp", "1.0.0")]
        public void WriteTo(ref Priv priv, global::System.Text.Encoding textEncoding)
        {
            priv.Number = this.Number;
            priv.Numbers.CopyFrom(this.Numbers);
            this.NumbersFixed.CopyTo(priv.NumbersFixed);
            priv.NumbersBounded.CopyFrom(this.NumbersBounded);
            this.Vector.WriteTo(ref priv.Vector, textEncoding);
            
            priv.Vectors = new global::Rosidl.Messages.Geometry.Vector3.PrivSequence(this.Vectors.Length);
            var Vectors_span = priv.Vectors.AsSpan();
            for (int __i = 0; __i < this.Vectors.Length; __i++)
            {
                this.Vectors[__i].WriteTo(ref Vectors_span[__i], textEncoding);
            }
            
            for (int __i = 0; __i < 3; __i++)
            {
                this.VectorsFixed[__i].WriteTo(ref priv.VectorsFixed[__i], textEncoding);
            }
            
            priv.VectorsBounded = new global::Rosidl.Messages.Geometry.Vector3.PrivSequence(this.VectorsBounded.Length);
            var VectorsBounded_span = priv.VectorsBounded.AsSpan();
            for (int __i = 0; __i < this.VectorsBounded.Length; __i++)
            {
                this.VectorsBounded[__i].WriteTo(ref VectorsBounded_span[__i], textEncoding);
            }
            
            priv.Str.CopyFrom(this.Str, textEncoding);
            priv.StrBounded.CopyFrom(this.StrBounded, textEncoding);
            
            priv.Strings = new global::Rosidl.Runtime.Interop.CStringSequence(this.Strings.Length);
            var Strings_span = priv.Strings.AsSpan();
            for (int __i = 0; __i < this.Strings.Length; __i++)
            {
                Strings_span[__i].CopyFrom(this.Strings[__i], textEncoding);
            }
            
            for (int __i = 0; __i < 3; __i++)
            {
                priv.StringsFixed[__i].CopyFrom(this.StringsFixed[__i], textEncoding);
            }
            
            priv.StringsBounded = new global::Rosidl.Runtime.Interop.CStringSequence(this.StringsBounded.Length);
            var StringsBounded_span = priv.StringsBounded.AsSpan();
            for (int __i = 0; __i < this.StringsBounded.Length; __i++)
            {
                StringsBounded_span[__i].CopyFrom(this.StringsBounded[__i], textEncoding);
            }
            
            priv.Wstring.CopyFrom(this.Wstring);
            priv.WstringBounded.CopyFrom(this.WstringBounded);
            
            priv.Wstrings = new global::Rosidl.Runtime.Interop.U16StringSequence(this.Wstrings.Length);
            var Wstrings_span = priv.Wstrings.AsSpan();
            for (int __i = 0; __i < this.Wstrings.Length; __i++)
            {
                Wstrings_span[__i].CopyFrom(this.Wstrings[__i]);
            }
            
            for (int __i = 0; __i < 3; __i++)
            {
                priv.WstringsFixed[__i].CopyFrom(this.WstringsFixed[__i]);
            }
            
            priv.WstringsBounded = new global::Rosidl.Runtime.Interop.U16StringSequence(this.WstringsBounded.Length);
            var WstringsBounded_span = priv.WstringsBounded.AsSpan();
            for (int __i = 0; __i < this.WstringsBounded.Length; __i++)
            {
                WstringsBounded_span[__i].CopyFrom(this.WstringsBounded[__i]);
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Rosidl.Runtime.Generator.CSharp", "1.0.0")]
        public static global::Rosidl.Runtime.IMessage CreateFrom(nint data, global::System.Text.Encoding textEncoding)
        {
            return new MyMessage(in global::System.Runtime.CompilerServices.Unsafe.AsRef<Priv>(data.ToPointer()), textEncoding);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Rosidl.Runtime.Generator.CSharp", "1.0.0")]
        public static nint UnsafeCreate()
        {
            return new(Priv.Create());
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Rosidl.Runtime.Generator.CSharp", "1.0.0")]
        public static void UnsafeDestroy(nint data)
        {
            Priv.Destroy((Priv*)data);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Rosidl.Runtime.Generator.CSharp", "1.0.0")]
        public static bool UnsafeInitialize(nint data)
        {
            return Priv.TryInitialize(out System.Runtime.CompilerServices.Unsafe.AsRef<Priv>(data.ToPointer()));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Rosidl.Runtime.Generator.CSharp", "1.0.0")]
        public static void UnsafeFinalize(nint data)
        {
            Priv.Finalize(ref System.Runtime.CompilerServices.Unsafe.AsRef<Priv>(data.ToPointer()));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Rosidl.Runtime.Generator.CSharp", "1.0.0")]
        public static bool UnsafeInitializeSequence(int size, nint data)
        {
            return PrivSequence.TryInitialize(size, out System.Runtime.CompilerServices.Unsafe.AsRef<PrivSequence>(data.ToPointer()));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Rosidl.Runtime.Generator.CSharp", "1.0.0")]
        public static void UnsafeFinalizeSequence(nint data)
        {
            PrivSequence.Finalize(ref System.Runtime.CompilerServices.Unsafe.AsRef<PrivSequence>(data.ToPointer()));
        }
        
        /// <summary>
        /// Blittable native structure for <c>custom_msgs/msg/MyMessage</c>.
        /// </summary>
        [global::System.Runtime.InteropServices.StructLayoutAttribute(global::System.Runtime.InteropServices.LayoutKind.Sequential)]
        public partial struct Priv : global::System.IEquatable<Priv>, global::System.IDisposable
        {
            /// <summary>
            /// Originally defined as: <c><![CDATA[int64 number]]></c>
            /// </summary>
            public long Number;
            
            /// <summary>
            /// Originally defined as: <c><![CDATA[int64[] numbers]]></c>
            /// </summary>
            public global::Rosidl.Runtime.Interop.Int64Sequence Numbers;
            
            private fixed long __NumbersFixed[3];
            
            /// <summary>
            /// Originally defined as: <c><![CDATA[int64[3] numbers_fixed]]></c>
            /// </summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Rosidl.Runtime.Generator.CSharp", "1.0.0")]
            public global::System.Span<long> NumbersFixed
            {
                get
                {
                    fixed (global::Rosidl.Messages.Custom.MyMessage.Priv* __p = &this) return new (__p->__NumbersFixed, 3);
                }
            }
            
            /// <summary>
            /// Originally defined as: <c><![CDATA[int64[<=3] numbers_bounded]]></c>
            /// </summary>
            public global::Rosidl.Runtime.Interop.Int64Sequence NumbersBounded;
            
            /// <summary>
            /// Originally defined as: <c><![CDATA[geometry_msgs/Vector3 vector]]></c>
            /// </summary>
            public global::Rosidl.Messages.Geometry.Vector3.Priv Vector;
            
            /// <summary>
            /// Originally defined as: <c><![CDATA[geometry_msgs/Vector3[] vectors]]></c>
            /// </summary>
            public global::Rosidl.Messages.Geometry.Vector3.PrivSequence Vectors;
            
            private global::Rosidl.Messages.Geometry.Vector3.Priv __VectorsFixed_0, __VectorsFixed_1, __VectorsFixed_2;
            
            /// <summary>
            /// Originally defined as: <c><![CDATA[geometry_msgs/Vector3[3] vectors_fixed]]></c>
            /// </summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Rosidl.Runtime.Generator.CSharp", "1.0.0")]
            public global::System.Span<global::Rosidl.Messages.Geometry.Vector3.Priv> VectorsFixed
            {
                get
                {
                    fixed (global::Rosidl.Messages.Geometry.Vector3.Priv* __p = &__VectorsFixed_0) return new (__p, 3);
                }
            }
            
            /// <summary>
            /// Originally defined as: <c><![CDATA[geometry_msgs/Vector3[<=3] vectors_bounded]]></c>
            /// </summary>
            public global::Rosidl.Messages.Geometry.Vector3.PrivSequence VectorsBounded;
            
            /// <summary>
            /// Originally defined as: <c><![CDATA[string str]]></c>
            /// </summary>
            public global::Rosidl.Runtime.Interop.CString Str;
            
            /// <summary>
            /// Originally defined as: <c><![CDATA[string<=3 str_bounded]]></c>
            /// </summary>
            public global::Rosidl.Runtime.Interop.CString StrBounded;
            
            /// <summary>
            /// Originally defined as: <c><![CDATA[string[] strings]]></c>
            /// </summary>
            public global::Rosidl.Runtime.Interop.CStringSequence Strings;
            
            private global::Rosidl.Runtime.Interop.CString __StringsFixed_0, __StringsFixed_1, __StringsFixed_2;
            
            /// <summary>
            /// Originally defined as: <c><![CDATA[string[3] strings_fixed]]></c>
            /// </summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Rosidl.Runtime.Generator.CSharp", "1.0.0")]
            public global::System.Span<global::Rosidl.Runtime.Interop.CString> StringsFixed
            {
                get
                {
                    fixed (global::Rosidl.Runtime.Interop.CString* __p = &__StringsFixed_0) return new (__p, 3);
                }
            }
            
            /// <summary>
            /// Originally defined as: <c><![CDATA[string[<=3] strings_bounded]]></c>
            /// </summary>
            public global::Rosidl.Runtime.Interop.CStringSequence StringsBounded;
            
            /// <summary>
            /// Originally defined as: <c><![CDATA[wstring wstring]]></c>
            /// </summary>
            public global::Rosidl.Runtime.Interop.U16String Wstring;
            
            /// <summary>
            /// Originally defined as: <c><![CDATA[wstring<=3 wstring_bounded]]></c>
            /// </summary>
            public global::Rosidl.Runtime.Interop.U16String WstringBounded;
            
            /// <summary>
            /// Originally defined as: <c><![CDATA[wstring[] wstrings]]></c>
            /// </summary>
            public global::Rosidl.Runtime.Interop.U16StringSequence Wstrings;
            
            private global::Rosidl.Runtime.Interop.U16String __WstringsFixed_0, __WstringsFixed_1, __WstringsFixed_2;
            
            /// <summary>
            /// Originally defined as: <c><![CDATA[wstring[3] wstrings_fixed]]></c>
            /// </summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Rosidl.Runtime.Generator.CSharp", "1.0.0")]
            public global::System.Span<global::Rosidl.Runtime.Interop.U16String> WstringsFixed
            {
                get
                {
                    fixed (global::Rosidl.Runtime.Interop.U16String* __p = &__WstringsFixed_0) return new (__p, 3);
                }
            }
            
            /// <summary>
            /// Originally defined as: <c><![CDATA[wstring[<=3] wstrings_bounded]]></c>
            /// </summary>
            public global::Rosidl.Runtime.Interop.U16StringSequence WstringsBounded;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Rosidl.Runtime.Generator.CSharp", "1.0.0")]
            public Priv()
            {
                ThrowIfNonSuccess(TryInitialize(out this));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Rosidl.Runtime.Generator.CSharp", "1.0.0")]
            public Priv(Priv src)
                : this(in src)
            {
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Rosidl.Runtime.Generator.CSharp", "1.0.0")]
            public Priv(in Priv src)
                : this()
            {
                CopyFrom(in src); 
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Rosidl.Runtime.Generator.CSharp", "1.0.0")]
            public Priv(Priv* src)
                : this()
            {
                CopyFrom(src); 
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Rosidl.Runtime.Generator.CSharp", "1.0.0")]
            public void Dispose()
            {
                Finalize(ref this);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Rosidl.Runtime.Generator.CSharp", "1.0.0")]
            public void CopyFrom(Priv src)
            {
                ThrowIfNonSuccess(TryCopy(in src, out this));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Rosidl.Runtime.Generator.CSharp", "1.0.0")]
            public void CopyFrom(in Priv src)
            {
                ThrowIfNonSuccess(TryCopy(in src, out this));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Rosidl.Runtime.Generator.CSharp", "1.0.0")]
            public void CopyFrom(Priv* src)
            {
                fixed (Priv* pThis = &this)
                {
                    ThrowIfNonSuccess(TryCopy(src, pThis));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Rosidl.Runtime.Generator.CSharp", "1.0.0")]
            private static bool TryCopy(in Priv input, out Priv output)
            {
                fixed (Priv* pInput = &input, pOutput = &output)
                {
                    return TryCopy(pInput, pOutput);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Rosidl.Runtime.Generator.CSharp", "1.0.0")]
            public bool Equals(Priv other)
            {
                return Priv.AreEqual(in other, in this);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Rosidl.Runtime.Generator.CSharp", "1.0.0")]
            public override bool Equals(object? obj) => obj is Priv s ? this.Equals(s) : false;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Rosidl.Runtime.Generator.CSharp", "1.0.0")]
            public override int GetHashCode()
            {
                var __hashCode = new global::System.HashCode();
                __hashCode.Add(this.Number);
                __hashCode.Add(this.Numbers);
                for (int __i = 0; __i < 3; __i++)
                {
                    __hashCode.Add(this.NumbersFixed[__i]);
                }
                __hashCode.Add(this.NumbersBounded);
                __hashCode.Add(this.Vector);
                __hashCode.Add(this.Vectors);
                for (int __i = 0; __i < 3; __i++)
                {
                    __hashCode.Add(this.VectorsFixed[__i]);
                }
                __hashCode.Add(this.VectorsBounded);
                __hashCode.Add(this.Str);
                __hashCode.Add(this.StrBounded);
                __hashCode.Add(this.Strings);
                for (int __i = 0; __i < 3; __i++)
                {
                    __hashCode.Add(this.StringsFixed[__i]);
                }
                __hashCode.Add(this.StringsBounded);
                __hashCode.Add(this.Wstring);
                __hashCode.Add(this.WstringBounded);
                __hashCode.Add(this.Wstrings);
                for (int __i = 0; __i < 3; __i++)
                {
                    __hashCode.Add(this.WstringsFixed[__i]);
                }
                __hashCode.Add(this.WstringsBounded);
            
                return __hashCode.ToHashCode();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Rosidl.Runtime.Generator.CSharp", "1.0.0")]
            public static bool operator ==(Priv lhs, Priv rhs)
            {
                return lhs.Equals(rhs);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Rosidl.Runtime.Generator.CSharp", "1.0.0")]
            public static bool operator !=(Priv lhs, Priv rhs)
            {
                return !(lhs == rhs);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Rosidl.Runtime.Generator.CSharp", "1.0.0")]
            public static Priv* Create()
            {
                return _PInvoke();
                
                [global::System.Runtime.InteropServices.SuppressGCTransitionAttribute]
                [global::System.Runtime.InteropServices.DllImportAttribute("custom_msgs__rosidl_generator_c", EntryPoint = "custom_msgs__msg__MyMessage__create")]
                static extern Priv* _PInvoke();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Rosidl.Runtime.Generator.CSharp", "1.0.0")]
            public static void Destroy(Priv* msg)
            {
                _PInvoke(msg);
                
                [global::System.Runtime.InteropServices.SuppressGCTransitionAttribute]
                [global::System.Runtime.InteropServices.DllImportAttribute("custom_msgs__rosidl_generator_c", EntryPoint = "custom_msgs__msg__MyMessage__destroy")]
                static extern void _PInvoke(Priv* msg);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Rosidl.Runtime.Generator.CSharp", "1.0.0")]
            public static bool TryInitialize(out Priv msg)
            {
                fixed (Priv* pMsg = &msg)
                {
                    return _PInvoke(pMsg);
                }
                
                [global::System.Runtime.InteropServices.SuppressGCTransitionAttribute]
                [global::System.Runtime.InteropServices.DllImportAttribute("custom_msgs__rosidl_generator_c", EntryPoint = "custom_msgs__msg__MyMessage__init")]
                static extern bool _PInvoke(Priv* msg);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Rosidl.Runtime.Generator.CSharp", "1.0.0")]
            public static void Finalize(ref Priv msg)
            {
                fixed (Priv* pMsg = &msg)
                {
                    _PInvoke(pMsg);
                }
                
                [global::System.Runtime.InteropServices.SuppressGCTransitionAttribute]
                [global::System.Runtime.InteropServices.DllImportAttribute("custom_msgs__rosidl_generator_c", EntryPoint = "custom_msgs__msg__MyMessage__fini")]
                static extern void _PInvoke(Priv* msg);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Rosidl.Runtime.Generator.CSharp", "1.0.0")]
            private static bool AreEqual(in Priv lhs, in Priv rhs)
            {
                fixed (Priv* plhs = &lhs, prhs = &rhs)
                {
                    return _PInvoke(plhs, prhs);
                }
                
                [global::System.Runtime.InteropServices.SuppressGCTransitionAttribute]
                [global::System.Runtime.InteropServices.DllImportAttribute("custom_msgs__rosidl_generator_c", EntryPoint = "custom_msgs__msg__MyMessage__are_qual")]
                static extern bool _PInvoke(Priv* lhs, Priv* rhs);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Rosidl.Runtime.Generator.CSharp", "1.0.0")]
            private static bool TryCopy(Priv* input, Priv* output)
            {
                return _PInvoke(input, output);
                
                [global::System.Runtime.InteropServices.SuppressGCTransitionAttribute]
                [global::System.Runtime.InteropServices.DllImportAttribute("custom_msgs__rosidl_generator_c", EntryPoint = "custom_msgs__msg__MyMessage__copy")]
                static extern bool _PInvoke(Priv* input, Priv* output);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Rosidl.Runtime.Generator.CSharp", "1.0.0")]
            public static void ThrowIfNonSuccess(bool ret, [global::System.Runtime.CompilerServices.CallerMemberNameAttribute]
            string caller = "")
            {
                if (!ret)
                {
                    throw new global::Rosidl.Runtime.RosidlException($"An error occurred when calling 'global::Rosidl.Messages.Custom.MyMessage.Priv.{caller}'.");
                }
            }
        }
        
        /// <summary>
        /// Blittable native sequence structure for <c>custom_msgs/msg/MyMessage</c>.
        /// </summary>
        [global::System.Runtime.InteropServices.StructLayoutAttribute(global::System.Runtime.InteropServices.LayoutKind.Sequential)]
        public partial struct PrivSequence : global::System.IEquatable<PrivSequence>, global::System.IDisposable
        {
            private Priv* __data;
            
            private nuint __size;
            
            private nuint __capacity;
            
            public int Size => (int)__size;
            
            public int Capcacity => (int)__capacity;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Rosidl.Runtime.Generator.CSharp", "1.0.0")]
            public PrivSequence()
                : this(0)
            {
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Rosidl.Runtime.Generator.CSharp", "1.0.0")]
            public PrivSequence(int size)
            {
                ThrowIfNonSuccess(TryInitialize(size, out this));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Rosidl.Runtime.Generator.CSharp", "1.0.0")]
            public PrivSequence(PrivSequence src)
                : this(in src)
            {
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Rosidl.Runtime.Generator.CSharp", "1.0.0")]
            public PrivSequence(in PrivSequence src)
                : this()
            {
                CopyFrom(in src); 
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Rosidl.Runtime.Generator.CSharp", "1.0.0")]
            public PrivSequence(PrivSequence* src)
                : this()
            {
                CopyFrom(src); 
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Rosidl.Runtime.Generator.CSharp", "1.0.0")]
            public PrivSequence(System.ReadOnlySpan<Priv> src)
                : this(src.Length)
            {
                src.CopyTo(AsSpan());
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Rosidl.Runtime.Generator.CSharp", "1.0.0")]
            public void Dispose()
            {
                Finalize(ref this);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Rosidl.Runtime.Generator.CSharp", "1.0.0")]
            public System.Span<Priv> AsSpan()
            {
                return new(__data, Size);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Rosidl.Runtime.Generator.CSharp", "1.0.0")]
            public void CopyFrom(System.ReadOnlySpan<Priv> src)
            {
                Finalize(ref this);
                ThrowIfNonSuccess(TryInitialize(src.Length, out this));
                src.CopyTo(AsSpan());
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Rosidl.Runtime.Generator.CSharp", "1.0.0")]
            public void CopyFrom(PrivSequence src)
            {
                ThrowIfNonSuccess(TryCopy(in src, out this));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Rosidl.Runtime.Generator.CSharp", "1.0.0")]
            public void CopyFrom(in PrivSequence src)
            {
                ThrowIfNonSuccess(TryCopy(in src, out this));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Rosidl.Runtime.Generator.CSharp", "1.0.0")]
            public void CopyFrom(PrivSequence* src)
            {
                fixed (PrivSequence* pThis = &this)
                {
                    ThrowIfNonSuccess(TryCopy(src, pThis));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Rosidl.Runtime.Generator.CSharp", "1.0.0")]
            private static bool TryCopy(in PrivSequence input, out PrivSequence output)
            {
                fixed (PrivSequence* pInput = &input, pOutput = &output)
                {
                    return TryCopy(pInput, pOutput);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Rosidl.Runtime.Generator.CSharp", "1.0.0")]
            public bool Equals(PrivSequence other)
            {
                return PrivSequence.AreEqual(in other, in this);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Rosidl.Runtime.Generator.CSharp", "1.0.0")]
            public override bool Equals(object? obj) => obj is PrivSequence s ? this.Equals(s) : false;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Rosidl.Runtime.Generator.CSharp", "1.0.0")]
            public override int GetHashCode()
            {
                return global::System.HashCode.Combine((nint)__data, __size, __capacity);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Rosidl.Runtime.Generator.CSharp", "1.0.0")]
            public static bool operator ==(PrivSequence lhs, PrivSequence rhs)
            {
                return lhs.Equals(rhs);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Rosidl.Runtime.Generator.CSharp", "1.0.0")]
            public static bool operator !=(PrivSequence lhs, PrivSequence rhs)
            {
                return !(lhs == rhs);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Rosidl.Runtime.Generator.CSharp", "1.0.0")]
            public static PrivSequence* Create()
            {
                return _PInvoke();
                
                [global::System.Runtime.InteropServices.SuppressGCTransitionAttribute]
                [global::System.Runtime.InteropServices.DllImportAttribute("custom_msgs__rosidl_generator_c", EntryPoint = "custom_msgs__msg__MyMessage__Sequence__create")]
                static extern PrivSequence* _PInvoke();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Rosidl.Runtime.Generator.CSharp", "1.0.0")]
            public static void Destroy(PrivSequence* msg)
            {
                _PInvoke(msg);
                
                [global::System.Runtime.InteropServices.SuppressGCTransitionAttribute]
                [global::System.Runtime.InteropServices.DllImportAttribute("custom_msgs__rosidl_generator_c", EntryPoint = "custom_msgs__msg__MyMessage__Sequence__destroy")]
                static extern void _PInvoke(PrivSequence* msg);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Rosidl.Runtime.Generator.CSharp", "1.0.0")]
            public static bool TryInitialize(int size, out PrivSequence msg)
            {
                fixed (PrivSequence* pMsg = &msg)
                {
                    return _PInvoke(pMsg, (uint)size);
                }
                
                [global::System.Runtime.InteropServices.SuppressGCTransitionAttribute]
                [global::System.Runtime.InteropServices.DllImportAttribute("custom_msgs__rosidl_generator_c", EntryPoint = "custom_msgs__msg__MyMessage__Sequence__init")]
                static extern bool _PInvoke(PrivSequence* msg, nuint size);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Rosidl.Runtime.Generator.CSharp", "1.0.0")]
            public static void Finalize(ref PrivSequence msg)
            {
                fixed (PrivSequence* pMsg = &msg)
                {
                    _PInvoke(pMsg);
                }
                
                [global::System.Runtime.InteropServices.SuppressGCTransitionAttribute]
                [global::System.Runtime.InteropServices.DllImportAttribute("custom_msgs__rosidl_generator_c", EntryPoint = "custom_msgs__msg__MyMessage__Sequence__fini")]
                static extern void _PInvoke(PrivSequence* msg);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Rosidl.Runtime.Generator.CSharp", "1.0.0")]
            private static bool AreEqual(in PrivSequence lhs, in PrivSequence rhs)
            {
                fixed (PrivSequence* plhs = &lhs, prhs = &rhs)
                {
                    return _PInvoke(plhs, prhs);
                }
                
                [global::System.Runtime.InteropServices.SuppressGCTransitionAttribute]
                [global::System.Runtime.InteropServices.DllImportAttribute("custom_msgs__rosidl_generator_c", EntryPoint = "custom_msgs__msg__MyMessage__Sequence__are_qual")]
                static extern bool _PInvoke(PrivSequence* lhs, PrivSequence* rhs);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Rosidl.Runtime.Generator.CSharp", "1.0.0")]
            private static bool TryCopy(PrivSequence* input, PrivSequence* output)
            {
                return _PInvoke(input, output);
                
                [global::System.Runtime.InteropServices.SuppressGCTransitionAttribute]
                [global::System.Runtime.InteropServices.DllImportAttribute("custom_msgs__rosidl_generator_c", EntryPoint = "custom_msgs__msg__MyMessage__Sequence__copy")]
                static extern bool _PInvoke(PrivSequence* input, PrivSequence* output);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Rosidl.Runtime.Generator.CSharp", "1.0.0")]
            public static void ThrowIfNonSuccess(bool ret, [global::System.Runtime.CompilerServices.CallerMemberNameAttribute]
            string caller = "")
            {
                if (!ret)
                {
                    throw new global::Rosidl.Runtime.RosidlException($"An error occurred when calling 'global::Rosidl.Messages.Custom.MyMessage.PrivSequence.{caller}'.");
                }
            }
        }
    }
}
